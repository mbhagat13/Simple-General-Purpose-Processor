|lab3_b
SW[0] => alu8bit:the_ALU.op[0]
SW[1] => alu8bit:the_ALU.op[1]
SW[2] => alu8bit:the_ALU.op[2]
SW[3] => sevenSeg_8bit:sevSeg_driver_B.dataIn[0]
SW[3] => alu8bit:the_ALU.b[0]
SW[4] => sevenSeg_8bit:sevSeg_driver_B.dataIn[1]
SW[4] => alu8bit:the_ALU.b[1]
SW[5] => sevenSeg_8bit:sevSeg_driver_B.dataIn[2]
SW[5] => alu8bit:the_ALU.b[2]
SW[6] => sevenSeg_8bit:sevSeg_driver_B.dataIn[3]
SW[6] => alu8bit:the_ALU.b[3]
SW[7] => sevenSeg_8bit:sevSeg_driver_B.dataIn[4]
SW[7] => alu8bit:the_ALU.b[4]
SW[8] => sevenSeg_8bit:sevSeg_driver_B.dataIn[5]
SW[8] => alu8bit:the_ALU.b[5]
SW[9] => sevenSeg_8bit:sevSeg_driver_B.dataIn[6]
SW[9] => alu8bit:the_ALU.b[6]
SW[10] => sevenSeg_8bit:sevSeg_driver_A.dataIn[0]
SW[10] => sevenSeg_8bit:sevSeg_driver_B.dataIn[7]
SW[10] => alu8bit:the_ALU.a[0]
SW[10] => alu8bit:the_ALU.b[7]
SW[11] => sevenSeg_8bit:sevSeg_driver_A.dataIn[1]
SW[11] => alu8bit:the_ALU.a[1]
SW[12] => sevenSeg_8bit:sevSeg_driver_A.dataIn[2]
SW[12] => alu8bit:the_ALU.a[2]
SW[13] => sevenSeg_8bit:sevSeg_driver_A.dataIn[3]
SW[13] => alu8bit:the_ALU.a[3]
SW[14] => sevenSeg_8bit:sevSeg_driver_A.dataIn[4]
SW[14] => alu8bit:the_ALU.a[4]
SW[15] => sevenSeg_8bit:sevSeg_driver_A.dataIn[5]
SW[15] => alu8bit:the_ALU.a[5]
SW[16] => sevenSeg_8bit:sevSeg_driver_A.dataIn[6]
SW[16] => alu8bit:the_ALU.a[6]
SW[17] => sevenSeg_8bit:sevSeg_driver_A.dataIn[7]
SW[17] => alu8bit:the_ALU.a[7]
HEX0[0] << sevenSeg_8bit:sevSeg_driver_ALU.segVal1[0]
HEX0[1] << sevenSeg_8bit:sevSeg_driver_ALU.segVal1[1]
HEX0[2] << sevenSeg_8bit:sevSeg_driver_ALU.segVal1[2]
HEX0[3] << sevenSeg_8bit:sevSeg_driver_ALU.segVal1[3]
HEX0[4] << sevenSeg_8bit:sevSeg_driver_ALU.segVal1[4]
HEX0[5] << sevenSeg_8bit:sevSeg_driver_ALU.segVal1[5]
HEX0[6] << sevenSeg_8bit:sevSeg_driver_ALU.segVal1[6]
HEX1[0] << sevenSeg_8bit:sevSeg_driver_ALU.segVal2[0]
HEX1[1] << sevenSeg_8bit:sevSeg_driver_ALU.segVal2[1]
HEX1[2] << sevenSeg_8bit:sevSeg_driver_ALU.segVal2[2]
HEX1[3] << sevenSeg_8bit:sevSeg_driver_ALU.segVal2[3]
HEX1[4] << sevenSeg_8bit:sevSeg_driver_ALU.segVal2[4]
HEX1[5] << sevenSeg_8bit:sevSeg_driver_ALU.segVal2[5]
HEX1[6] << sevenSeg_8bit:sevSeg_driver_ALU.segVal2[6]
HEX2[0] << <VCC>
HEX2[1] << <VCC>
HEX2[2] << <VCC>
HEX2[3] << <VCC>
HEX2[4] << <VCC>
HEX2[5] << <VCC>
HEX2[6] << sevenSeg_8bit:sevSeg_driver_ALU.sign
HEX3[0] << <VCC>
HEX3[1] << <VCC>
HEX3[2] << <VCC>
HEX3[3] << <VCC>
HEX3[4] << <VCC>
HEX3[5] << <VCC>
HEX3[6] << <VCC>
HEX4[0] << sevenSeg_8bit:sevSeg_driver_B.segVal1[0]
HEX4[1] << sevenSeg_8bit:sevSeg_driver_B.segVal1[1]
HEX4[2] << sevenSeg_8bit:sevSeg_driver_B.segVal1[2]
HEX4[3] << sevenSeg_8bit:sevSeg_driver_B.segVal1[3]
HEX4[4] << sevenSeg_8bit:sevSeg_driver_B.segVal1[4]
HEX4[5] << sevenSeg_8bit:sevSeg_driver_B.segVal1[5]
HEX4[6] << sevenSeg_8bit:sevSeg_driver_B.segVal1[6]
HEX5[0] << sevenSeg_8bit:sevSeg_driver_B.segVal2[0]
HEX5[1] << sevenSeg_8bit:sevSeg_driver_B.segVal2[1]
HEX5[2] << sevenSeg_8bit:sevSeg_driver_B.segVal2[2]
HEX5[3] << sevenSeg_8bit:sevSeg_driver_B.segVal2[3]
HEX5[4] << sevenSeg_8bit:sevSeg_driver_B.segVal2[4]
HEX5[5] << sevenSeg_8bit:sevSeg_driver_B.segVal2[5]
HEX5[6] << sevenSeg_8bit:sevSeg_driver_B.segVal2[6]
HEX6[0] << sevenSeg_8bit:sevSeg_driver_A.segVal1[0]
HEX6[1] << sevenSeg_8bit:sevSeg_driver_A.segVal1[1]
HEX6[2] << sevenSeg_8bit:sevSeg_driver_A.segVal1[2]
HEX6[3] << sevenSeg_8bit:sevSeg_driver_A.segVal1[3]
HEX6[4] << sevenSeg_8bit:sevSeg_driver_A.segVal1[4]
HEX6[5] << sevenSeg_8bit:sevSeg_driver_A.segVal1[5]
HEX6[6] << sevenSeg_8bit:sevSeg_driver_A.segVal1[6]
HEX7[0] << sevenSeg_8bit:sevSeg_driver_A.segVal2[0]
HEX7[1] << sevenSeg_8bit:sevSeg_driver_A.segVal2[1]
HEX7[2] << sevenSeg_8bit:sevSeg_driver_A.segVal2[2]
HEX7[3] << sevenSeg_8bit:sevSeg_driver_A.segVal2[3]
HEX7[4] << sevenSeg_8bit:sevSeg_driver_A.segVal2[4]
HEX7[5] << sevenSeg_8bit:sevSeg_driver_A.segVal2[5]
HEX7[6] << sevenSeg_8bit:sevSeg_driver_A.segVal2[6]
LEDG[0] << alu8bit:the_ALU.zero
LEDG[1] << alu8bit:the_ALU.cout
LEDG[2] << <GND>
LEDG[3] << <GND>
LEDG[4] << <GND>
LEDG[5] << <GND>
LEDG[6] << <GND>
LEDG[7] << <GND>
LEDG[8] << <GND>
LEDR[0] << <GND>
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
LEDR[10] << <GND>
LEDR[11] << <GND>
LEDR[12] << <GND>
LEDR[13] << sevenSeg_8bit:sevSeg_driver_B.sign
LEDR[14] << <GND>
LEDR[15] << <GND>
LEDR[16] << sevenSeg_8bit:sevSeg_driver_A.sign
LEDR[17] << <GND>


|lab3_b|sevenSeg_8bit:sevSeg_driver_A
dataIn[0] => Add0.IN14
dataIn[0] => numProcess[0].DATAA
dataIn[1] => Add0.IN13
dataIn[1] => numProcess[1].DATAA
dataIn[2] => Add0.IN12
dataIn[2] => numProcess[2].DATAA
dataIn[3] => Add0.IN11
dataIn[3] => numProcess[3].DATAA
dataIn[4] => Add0.IN10
dataIn[4] => numProcess2[0].DATAA
dataIn[5] => Add0.IN9
dataIn[5] => numProcess2[1].DATAA
dataIn[6] => Add0.IN8
dataIn[6] => numProcess2[2].DATAA
dataIn[7] => numProcess[3].OUTPUTSELECT
dataIn[7] => numProcess[2].OUTPUTSELECT
dataIn[7] => numProcess[1].OUTPUTSELECT
dataIn[7] => numProcess[0].OUTPUTSELECT
dataIn[7] => numProcess2[2].OUTPUTSELECT
dataIn[7] => numProcess2[1].OUTPUTSELECT
dataIn[7] => numProcess2[0].OUTPUTSELECT
dataIn[7] => numVal2[0].LATCH_ENABLE
dataIn[7] => numVal2[1].LATCH_ENABLE
dataIn[7] => numVal2[2].LATCH_ENABLE
dataIn[7] => numVal2[3].LATCH_ENABLE
dataIn[7] => numVal2[4].LATCH_ENABLE
dataIn[7] => numVal2[5].LATCH_ENABLE
dataIn[7] => numVal2[6].LATCH_ENABLE
dataIn[7] => sign.DATAIN
segVal1[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
segVal1[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
segVal1[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
segVal1[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
segVal1[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
segVal1[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
segVal1[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
segVal2[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segVal2[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segVal2[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segVal2[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segVal2[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segVal2[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segVal2[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
sign <= dataIn[7].DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|sevenSeg_8bit:sevSeg_driver_B
dataIn[0] => Add0.IN14
dataIn[0] => numProcess[0].DATAA
dataIn[1] => Add0.IN13
dataIn[1] => numProcess[1].DATAA
dataIn[2] => Add0.IN12
dataIn[2] => numProcess[2].DATAA
dataIn[3] => Add0.IN11
dataIn[3] => numProcess[3].DATAA
dataIn[4] => Add0.IN10
dataIn[4] => numProcess2[0].DATAA
dataIn[5] => Add0.IN9
dataIn[5] => numProcess2[1].DATAA
dataIn[6] => Add0.IN8
dataIn[6] => numProcess2[2].DATAA
dataIn[7] => numProcess[3].OUTPUTSELECT
dataIn[7] => numProcess[2].OUTPUTSELECT
dataIn[7] => numProcess[1].OUTPUTSELECT
dataIn[7] => numProcess[0].OUTPUTSELECT
dataIn[7] => numProcess2[2].OUTPUTSELECT
dataIn[7] => numProcess2[1].OUTPUTSELECT
dataIn[7] => numProcess2[0].OUTPUTSELECT
dataIn[7] => numVal2[0].LATCH_ENABLE
dataIn[7] => numVal2[1].LATCH_ENABLE
dataIn[7] => numVal2[2].LATCH_ENABLE
dataIn[7] => numVal2[3].LATCH_ENABLE
dataIn[7] => numVal2[4].LATCH_ENABLE
dataIn[7] => numVal2[5].LATCH_ENABLE
dataIn[7] => numVal2[6].LATCH_ENABLE
dataIn[7] => sign.DATAIN
segVal1[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
segVal1[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
segVal1[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
segVal1[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
segVal1[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
segVal1[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
segVal1[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
segVal2[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segVal2[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segVal2[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segVal2[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segVal2[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segVal2[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segVal2[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
sign <= dataIn[7].DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|sevenSeg_8bit:sevSeg_driver_ALU
dataIn[0] => Add0.IN14
dataIn[0] => numProcess[0].DATAA
dataIn[1] => Add0.IN13
dataIn[1] => numProcess[1].DATAA
dataIn[2] => Add0.IN12
dataIn[2] => numProcess[2].DATAA
dataIn[3] => Add0.IN11
dataIn[3] => numProcess[3].DATAA
dataIn[4] => Add0.IN10
dataIn[4] => numProcess2[0].DATAA
dataIn[5] => Add0.IN9
dataIn[5] => numProcess2[1].DATAA
dataIn[6] => Add0.IN8
dataIn[6] => numProcess2[2].DATAA
dataIn[7] => numProcess[3].OUTPUTSELECT
dataIn[7] => numProcess[2].OUTPUTSELECT
dataIn[7] => numProcess[1].OUTPUTSELECT
dataIn[7] => numProcess[0].OUTPUTSELECT
dataIn[7] => numProcess2[2].OUTPUTSELECT
dataIn[7] => numProcess2[1].OUTPUTSELECT
dataIn[7] => numProcess2[0].OUTPUTSELECT
dataIn[7] => numVal2[0].LATCH_ENABLE
dataIn[7] => numVal2[1].LATCH_ENABLE
dataIn[7] => numVal2[2].LATCH_ENABLE
dataIn[7] => numVal2[3].LATCH_ENABLE
dataIn[7] => numVal2[4].LATCH_ENABLE
dataIn[7] => numVal2[5].LATCH_ENABLE
dataIn[7] => numVal2[6].LATCH_ENABLE
dataIn[7] => sign.DATAIN
segVal1[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
segVal1[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
segVal1[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
segVal1[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
segVal1[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
segVal1[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
segVal1[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
segVal2[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segVal2[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segVal2[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segVal2[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segVal2[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segVal2[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segVal2[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
sign <= dataIn[7].DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU
a[0] => bit8Adder:adder1.a[0]
a[0] => bit8And:and1.a[0]
a[0] => bit8Or:or1.a[0]
a[0] => bit8ROR:lsr1.a[0]
a[0] => bit8ROL:lsl1.a[0]
a[1] => bit8Adder:adder1.a[1]
a[1] => bit8And:and1.a[1]
a[1] => bit8Or:or1.a[1]
a[1] => bit8ROR:lsr1.a[1]
a[1] => bit8ROL:lsl1.a[1]
a[2] => bit8Adder:adder1.a[2]
a[2] => bit8And:and1.a[2]
a[2] => bit8Or:or1.a[2]
a[2] => bit8ROR:lsr1.a[2]
a[2] => bit8ROL:lsl1.a[2]
a[3] => bit8Adder:adder1.a[3]
a[3] => bit8And:and1.a[3]
a[3] => bit8Or:or1.a[3]
a[3] => bit8ROR:lsr1.a[3]
a[3] => bit8ROL:lsl1.a[3]
a[4] => bit8Adder:adder1.a[4]
a[4] => bit8And:and1.a[4]
a[4] => bit8Or:or1.a[4]
a[4] => bit8ROR:lsr1.a[4]
a[4] => bit8ROL:lsl1.a[4]
a[5] => bit8Adder:adder1.a[5]
a[5] => bit8And:and1.a[5]
a[5] => bit8Or:or1.a[5]
a[5] => bit8ROR:lsr1.a[5]
a[5] => bit8ROL:lsl1.a[5]
a[6] => bit8Adder:adder1.a[6]
a[6] => bit8And:and1.a[6]
a[6] => bit8Or:or1.a[6]
a[6] => bit8ROR:lsr1.a[6]
a[6] => bit8ROL:lsl1.a[6]
a[7] => bit8Adder:adder1.a[7]
a[7] => bit8And:and1.a[7]
a[7] => bit8Or:or1.a[7]
a[7] => bit8ROR:lsr1.a[7]
a[7] => bit8ROL:lsl1.a[7]
b[0] => bit8And:and1.b[0]
b[0] => bit8Or:or1.b[0]
b[0] => Multiplexer2to1:negMux.w0[0]
b[0] => bit8Inverse:notber.a[0]
b[1] => bit8And:and1.b[1]
b[1] => bit8Or:or1.b[1]
b[1] => Multiplexer2to1:negMux.w0[1]
b[1] => bit8Inverse:notber.a[1]
b[2] => bit8And:and1.b[2]
b[2] => bit8Or:or1.b[2]
b[2] => Multiplexer2to1:negMux.w0[2]
b[2] => bit8Inverse:notber.a[2]
b[3] => bit8And:and1.b[3]
b[3] => bit8Or:or1.b[3]
b[3] => Multiplexer2to1:negMux.w0[3]
b[3] => bit8Inverse:notber.a[3]
b[4] => bit8And:and1.b[4]
b[4] => bit8Or:or1.b[4]
b[4] => Multiplexer2to1:negMux.w0[4]
b[4] => bit8Inverse:notber.a[4]
b[5] => bit8And:and1.b[5]
b[5] => bit8Or:or1.b[5]
b[5] => Multiplexer2to1:negMux.w0[5]
b[5] => bit8Inverse:notber.a[5]
b[6] => bit8And:and1.b[6]
b[6] => bit8Or:or1.b[6]
b[6] => Multiplexer2to1:negMux.w0[6]
b[6] => bit8Inverse:notber.a[6]
b[7] => bit8And:and1.b[7]
b[7] => bit8Or:or1.b[7]
b[7] => Multiplexer2to1:negMux.w0[7]
b[7] => bit8Inverse:notber.a[7]
op[0] => Multiplexer8to1:mux1.s[0]
op[1] => Multiplexer8to1:mux1.s[1]
op[2] => Multiplexer8to1:mux1.s[2]
op[2] => bit8Adder:adder1.cin
op[2] => Multiplexer2to1:negMux.s
result[0] <= Multiplexer8to1:mux1.f[0]
result[1] <= Multiplexer8to1:mux1.f[1]
result[2] <= Multiplexer8to1:mux1.f[2]
result[3] <= Multiplexer8to1:mux1.f[3]
result[4] <= Multiplexer8to1:mux1.f[4]
result[5] <= Multiplexer8to1:mux1.f[5]
result[6] <= Multiplexer8to1:mux1.f[6]
result[7] <= Multiplexer8to1:mux1.f[7]
cout <= bit8Adder:adder1.carry
zero <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|Multiplexer8to1:mux1
w0[0] => Mux0.IN2
w0[1] => Mux1.IN2
w0[2] => Mux2.IN2
w0[3] => Mux3.IN2
w0[4] => Mux4.IN2
w0[5] => Mux5.IN2
w0[6] => Mux6.IN2
w0[7] => Mux7.IN2
w1[0] => Mux0.IN3
w1[1] => Mux1.IN3
w1[2] => Mux2.IN3
w1[3] => Mux3.IN3
w1[4] => Mux4.IN3
w1[5] => Mux5.IN3
w1[6] => Mux6.IN3
w1[7] => Mux7.IN3
w2[0] => Mux0.IN4
w2[1] => Mux1.IN4
w2[2] => Mux2.IN4
w2[3] => Mux3.IN4
w2[4] => Mux4.IN4
w2[5] => Mux5.IN4
w2[6] => Mux6.IN4
w2[7] => Mux7.IN4
w3[0] => Mux0.IN5
w3[1] => Mux1.IN5
w3[2] => Mux2.IN5
w3[3] => Mux3.IN5
w3[4] => Mux4.IN5
w3[5] => Mux5.IN5
w3[6] => Mux6.IN5
w3[7] => Mux7.IN5
w4[0] => Mux0.IN6
w4[1] => Mux1.IN6
w4[2] => Mux2.IN6
w4[3] => Mux3.IN6
w4[4] => Mux4.IN6
w4[5] => Mux5.IN6
w4[6] => Mux6.IN6
w4[7] => Mux7.IN6
w5[0] => Mux0.IN7
w5[1] => Mux1.IN7
w5[2] => Mux2.IN7
w5[3] => Mux3.IN7
w5[4] => Mux4.IN7
w5[5] => Mux5.IN7
w5[6] => Mux6.IN7
w5[7] => Mux7.IN7
s[0] => Mux0.IN10
s[0] => Mux1.IN10
s[0] => Mux2.IN10
s[0] => Mux3.IN10
s[0] => Mux4.IN10
s[0] => Mux5.IN10
s[0] => Mux6.IN10
s[0] => Mux7.IN10
s[0] => Mux8.IN10
s[1] => Mux0.IN9
s[1] => Mux1.IN9
s[1] => Mux2.IN9
s[1] => Mux3.IN9
s[1] => Mux4.IN9
s[1] => Mux5.IN9
s[1] => Mux6.IN9
s[1] => Mux7.IN9
s[1] => Mux8.IN9
s[2] => Mux0.IN8
s[2] => Mux1.IN8
s[2] => Mux2.IN8
s[2] => Mux3.IN8
s[2] => Mux4.IN8
s[2] => Mux5.IN8
s[2] => Mux6.IN8
s[2] => Mux7.IN8
s[2] => Mux8.IN8
f[0] <= f[0].DB_MAX_OUTPUT_PORT_TYPE
f[1] <= f[1].DB_MAX_OUTPUT_PORT_TYPE
f[2] <= f[2].DB_MAX_OUTPUT_PORT_TYPE
f[3] <= f[3].DB_MAX_OUTPUT_PORT_TYPE
f[4] <= f[4].DB_MAX_OUTPUT_PORT_TYPE
f[5] <= f[5].DB_MAX_OUTPUT_PORT_TYPE
f[6] <= f[6].DB_MAX_OUTPUT_PORT_TYPE
f[7] <= f[7].DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1
a[0] => bit4Adder:s1.a[0]
a[1] => bit4Adder:s1.a[1]
a[2] => bit4Adder:s1.a[2]
a[3] => bit4Adder:s1.a[3]
a[4] => bit4Adder:s2.a[0]
a[5] => bit4Adder:s2.a[1]
a[6] => bit4Adder:s2.a[2]
a[7] => bit4Adder:s2.a[3]
b[0] => bit4Adder:s1.b[0]
b[1] => bit4Adder:s1.b[1]
b[2] => bit4Adder:s1.b[2]
b[3] => bit4Adder:s1.b[3]
b[4] => bit4Adder:s2.b[0]
b[5] => bit4Adder:s2.b[1]
b[6] => bit4Adder:s2.b[2]
b[7] => bit4Adder:s2.b[3]
cin => bit4Adder:s1.cin
result[0] <= bit4Adder:s1.sum[0]
result[1] <= bit4Adder:s1.sum[1]
result[2] <= bit4Adder:s1.sum[2]
result[3] <= bit4Adder:s1.sum[3]
result[4] <= bit4Adder:s2.sum[0]
result[5] <= bit4Adder:s2.sum[1]
result[6] <= bit4Adder:s2.sum[2]
result[7] <= bit4Adder:s2.sum[3]
carry <= bit4Adder:s2.carry


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s1
a[0] => fullAdder:p1.a
a[1] => fullAdder:p2.a
a[2] => fullAdder:p3.a
a[3] => fullAdder:p4.a
b[0] => fullAdder:p1.b
b[1] => fullAdder:p2.b
b[2] => fullAdder:p3.b
b[3] => fullAdder:p4.b
cin => fullAdder:p1.cin
sum[0] <= fullAdder:p1.s
sum[1] <= fullAdder:p2.s
sum[2] <= fullAdder:p3.s
sum[3] <= fullAdder:p4.s
carry <= fullAdder:p4.cout


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s1|fullAdder:p1
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s1|fullAdder:p2
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s1|fullAdder:p3
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s1|fullAdder:p4
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s2
a[0] => fullAdder:p1.a
a[1] => fullAdder:p2.a
a[2] => fullAdder:p3.a
a[3] => fullAdder:p4.a
b[0] => fullAdder:p1.b
b[1] => fullAdder:p2.b
b[2] => fullAdder:p3.b
b[3] => fullAdder:p4.b
cin => fullAdder:p1.cin
sum[0] <= fullAdder:p1.s
sum[1] <= fullAdder:p2.s
sum[2] <= fullAdder:p3.s
sum[3] <= fullAdder:p4.s
carry <= fullAdder:p4.cout


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s2|fullAdder:p1
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s2|fullAdder:p2
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s2|fullAdder:p3
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Adder:adder1|bit4Adder:s2|fullAdder:p4
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8And:and1
a[0] => result.IN0
a[1] => result.IN0
a[2] => result.IN0
a[3] => result.IN0
a[4] => result.IN0
a[5] => result.IN0
a[6] => result.IN0
a[7] => result.IN0
b[0] => result.IN1
b[1] => result.IN1
b[2] => result.IN1
b[3] => result.IN1
b[4] => result.IN1
b[5] => result.IN1
b[6] => result.IN1
b[7] => result.IN1
result[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Or:or1
a[0] => result.IN0
a[1] => result.IN0
a[2] => result.IN0
a[3] => result.IN0
a[4] => result.IN0
a[5] => result.IN0
a[6] => result.IN0
a[7] => result.IN0
b[0] => result.IN1
b[1] => result.IN1
b[2] => result.IN1
b[3] => result.IN1
b[4] => result.IN1
b[5] => result.IN1
b[6] => result.IN1
b[7] => result.IN1
result[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8ROR:lsr1
a[0] => ~NO_FANOUT~
a[1] => result[0].DATAIN
a[2] => result[1].DATAIN
a[3] => result[2].DATAIN
a[4] => result[3].DATAIN
a[5] => result[4].DATAIN
a[6] => result[5].DATAIN
a[7] => result[6].DATAIN
result[0] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a[7].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= <GND>


|lab3_b|alu8bit:the_ALU|bit8ROL:lsl1
a[0] => result[1].DATAIN
a[1] => result[2].DATAIN
a[2] => result[3].DATAIN
a[3] => result[4].DATAIN
a[4] => result[5].DATAIN
a[5] => result[6].DATAIN
a[6] => result[7].DATAIN
a[7] => ~NO_FANOUT~
result[0] <= <GND>
result[1] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a[6].DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|Multiplexer2to1:negMux
w0[0] => f.DATAB
w0[1] => f.DATAB
w0[2] => f.DATAB
w0[3] => f.DATAB
w0[4] => f.DATAB
w0[5] => f.DATAB
w0[6] => f.DATAB
w0[7] => f.DATAB
w1[0] => f.DATAA
w1[1] => f.DATAA
w1[2] => f.DATAA
w1[3] => f.DATAA
w1[4] => f.DATAA
w1[5] => f.DATAA
w1[6] => f.DATAA
w1[7] => f.DATAA
s => f.OUTPUTSELECT
s => f.OUTPUTSELECT
s => f.OUTPUTSELECT
s => f.OUTPUTSELECT
s => f.OUTPUTSELECT
s => f.OUTPUTSELECT
s => f.OUTPUTSELECT
s => f.OUTPUTSELECT
f[0] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[1] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[2] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[3] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[4] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[5] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[6] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[7] <= f.DB_MAX_OUTPUT_PORT_TYPE


|lab3_b|alu8bit:the_ALU|bit8Inverse:notber
a[0] => result[0].DATAIN
a[1] => result[1].DATAIN
a[2] => result[2].DATAIN
a[3] => result[3].DATAIN
a[4] => result[4].DATAIN
a[5] => result[5].DATAIN
a[6] => result[6].DATAIN
a[7] => result[7].DATAIN
result[0] <= a[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= a[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= a[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= a[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= a[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= a[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= a[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= a[7].DB_MAX_OUTPUT_PORT_TYPE


